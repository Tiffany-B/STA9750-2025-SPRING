[
  {
    "objectID": "index1.html#about-me",
    "href": "index1.html#about-me",
    "title": "A Glimpse Of Stephanie",
    "section": "About Me!",
    "text": "About Me!\n\n\n\n\n\nflowchart TD\n  A(Stephanie) --&gt; B(Born in Brooklyn, NY)\n  B --&gt; C{Education}\n  C --&gt; D(Bachelor's of Finance)\n  C --&gt; E(Master's of Science in Business Analytics w/ Concentration in Data Analytics)\n\n\n\n\n\n\nHi! I’m Stephanie. I’m a New York native who has lived in two of NYC’s boroughs. I currently live in Nassau County, Long Island. I graduated from Muhlenberg College with a Bachelor of Arts in Finance. I am pursuing a master’s degree in business analytics because I would like to become proficient in data analysis and software tools. In addition, I am invested in learning how to use data to craft compelling stories that influence insights and decision-making.\n\nFun Facts\n\nI used to work for TD Bank\nI have a Series 7 License\nI almost became an accountant\n\n\n\nLast Updated: Wednesday 02 12, 2025 at 20:06PM"
  },
  {
    "objectID": "index.html#about-me",
    "href": "index.html#about-me",
    "title": "A Glimpse Of Stephanie",
    "section": "About Me!",
    "text": "About Me!\n\n\n\n\n\nflowchart TD\n  A(Stephanie) --&gt; B(Born in Brooklyn, NY)\n  B --&gt; C{Education}\n  C --&gt; D(Bachelor's of Finance)\n  C --&gt; E(Master's of Science in Business Analytics w/ Concentration in Data Analytics)\n\n\n\n\n\n\nHi! I’m Stephanie. I’m a New York native who has lived in two of NYC’s boroughs. I currently live in Nassau County, Long Island. I graduated from Muhlenberg College with a Bachelor of Arts in Finance. I am pursuing a master’s degree in business analytics because I would like to become proficient in data analysis and software tools. In addition, I am invested in learning how to use data to craft compelling stories that influence insights and decision-making.\n\nFun Facts\n\nI used to work for TD Bank\nI have a Series 7 License\nI almost became an accountant\n\n\n\n\n\nPhoto by Annie Spratt\n\n\n\n\nLast Updated: Wednesday 02 12, 2025 at 20:06PM"
  },
  {
    "objectID": "mp01.html",
    "href": "mp01.html",
    "title": "Commission to Analyze Taxpayer Spending (CATS)",
    "section": "",
    "text": "The report analysis below serves to address NYC’s payroll expenses and identify opportunities to spend taxpayer monies more effectively.\nPlease refer to the following dataset:  City Payroll Dataset\nThe goal for this analysis is to analyze the NYC Payroll and report possible savings for the CATS Commissioners consideration\n\n\nThe following table displays NYC Mayor Eric L Adams salary over a 10 year career span in public office. We are required to review this data to understand how NYC taxpayer monies are spent on highly ranked officials like Mr. Adams. As well as, how his salary over the past 10 years compares to the regular NYC employee.\n\n\nCode\nif (!requireNamespace(\"httr2\", quietly = TRUE)) install.packages(\"httr2\")\nif (!requireNamespace(\"jsonlite\", quietly = TRUE)) install.packages(\"jsonlite\")\nif (!requireNamespace(\"dplyr\", quietly = TRUE)) install.packages(\"dplyr\")\nif (!requireNamespace(\"readr\", quietly = TRUE)) install.packages(\"readr\")\nif (!requireNamespace(\"stringr\", quietly = TRUE)) install.packages(\"stringr\")\nif (!requireNamespace(\"DT\", quietly = TRUE)) install.packages(\"DT\")\n\nlibrary(httr2)\nlibrary(jsonlite)\nlibrary(dplyr)\nlibrary(readr)\nlibrary(stringr)\nlibrary(DT)\n\nif (file.exists(\"data/mp01/nyc_payroll_export.csv\")) {\n  payroll_data &lt;- read_csv(\"data/mp01/nyc_payroll_export.csv\")\n} else {\n  stop(\"CSV file not found!\")\n}\n\npayroll_data &lt;- read_csv(\"data/mp01/nyc_payroll_export.csv\")\npayroll_data &lt;- payroll_data |&gt; \n  mutate(\n    agency_name = str_to_title(agency_name),\n    last_name  = str_to_title(last_name),\n    first_name = str_to_title(first_name),\n    work_location_borough = str_to_title(work_location_borough),\n    title_description = str_to_title(title_description),\n    leave_status_as_of_june_30 = str_to_title(leave_status_as_of_june_30)\n     ) |&gt;\n  rename(\n    `Fiscal Year`    = fiscal_year,\n    `Agency Name`    = agency_name,\n    `First Name`     = first_name,\n    `Middle Initial` = mid_init,\n    `Last Name`      = last_name,\n    `Position`       = title_description,\n    `Base Salary`    = base_salary,\n    `Start Date`     = agency_start_date,\n    `Reg Hours`      = regular_hours,\n    `Overtime Hours` = ot_hours,\n    `Additional Pay` = total_other_pay,\n    `Payroll Number` = payroll_number,\n    `Work Location`  = work_location_borough,\n    `Leave Status`   = leave_status_as_of_june_30,\n    `Pay Basis`      = pay_basis,\n    `Gross Paid`     = regular_gross_paid,\n    `Overtime Paid`  = total_ot_paid\n  )\n\npayroll_data_filtered &lt;- payroll_data |&gt;\n  filter(`Gross Paid` &gt;= 0) \n\neric_adams_data &lt;- payroll_data_filtered |&gt;\n    filter(`First Name` == \"Eric\", `Middle Initial` == \"L\", `Last Name` == \"Adams\") |&gt;\n    mutate(`Total Salary` = `Gross Paid` + `Overtime Paid` + `Additional Pay`) |&gt;\n  group_by(`Fiscal Year`) \n\neric_adams_career &lt;- eric_adams_data |&gt;\n  group_by(`Fiscal Year`, `Agency Name`) |&gt;\n  summarise(\n    `Total Salary` = sum(`Total Salary`, na.rm = TRUE),\n    `Position` = paste(unique(`Position`), collapse = \",\"),\n    .groups = \"drop\"\n    ) \n\n\n\n\n\n\n\n\n\n\nThe Mayor’s salary has consistently increased since he became Borough President of Brooklyn. As we analyze the data set, we will see that the adjustment of Mayor’s salary every year is differs from non high ranking employees and high ranking officials in NYC’s payroll.\n\n\n\n\nThe following findings1 below serve to help identify factors to consider as we conduct analysis for the purposes of recommending the best policy for adoption by the CATS Commissioners.\n\n\n\n\n\n\n\n\nThe position with the highest base rate of pay is the Chief Actuary who has a per Annum salary of $296,470.38. The fixed salary of the Chief Actuary is comparable to the Mayor and other high ranking officials.\n\n\n\n\n\n\n\n\n\nThe government employee with the single highest total payroll is Chief Marine Engineer, Pavel Kotelevich. Pavel’s total payroll is $697,052.01. This amount includes his base salary per annum and overtime wages paid. Since Pavel had over 1000 hours of overtime hours, he has received substantial overtime wages despite making a fixed salary of 169,520 dollars in fiscal year 2024.\n\n\n\n\n\n\n\n\n\nThe Department of Correction has the most overtime hours recorded compared to any other agency. The results show that James Inernicola has one of the highest overtime hours recorded, 3692.90 hours. We can assume that the Department of Correction allocates a part of it’s budget to overtime wages for the police force. Therefore, the city’s payroll must also allocate a part of it’s budget for overtime expenses in large department’s like the Department of Correction.\n\n\n\n\n\n\n\n\n\nThe Districting Commission has on record one of the highest average annual payroll recorded at $158,699.67 in 2014. This result conveys how the agency allocates this amount each year in their budget to pay each employee wages.\n\n\n\n\n\n\n\n\n\nThe Department of ED Pedagogical has the highest recorded number of employees on payroll of over 100,000 employees employed per year. The city payroll must allocate a part of it’s budget to the wages and hiring expenses of this agency and other agencies.\n\n\n\n\n\n\n\n\n\nThe Fire Department has the largest average overtime usage compared to the average regular hours recorded at 346.40 hours. Similar to the Department of Correction, the Fire Department has to allocate a part of it’s budget to overtime wages of it’s firefighter workforce.\n\n\n\n\n\n\n\n\n\nThe average salary of employees that work outside of the 5 NYC boroughs is little over $100,000.00. This means that the taxpayer monies that fund these jobs are not being spent in the NYC market or economy.\n\n\n\n\n\n\n\n\n\nThe growth rate from 2014 to 2024 is approximately 46.86%. This is the percentage increase in the total payroll from 2014 to 2024, a 10 year span. This means that NYC’s aggregate wage increases are on track to meet 50% in the coming years"
  },
  {
    "objectID": "mp01.html#point-1-employee-salary-table-for-nyc-mayor-eric-l-adams",
    "href": "mp01.html#point-1-employee-salary-table-for-nyc-mayor-eric-l-adams",
    "title": "STA 9750 Submission Material",
    "section": "Point 1: Employee Salary Table for NYC Mayor, Eric L Adams",
    "text": "Point 1: Employee Salary Table for NYC Mayor, Eric L Adams\nThe following table addresses the salaries of the NYC Mayor, Mr. Adams over the span of his career in public office. This data forces us to look at the way in which taxpayer monies are spent on highly ranked offcials like Mr. Adams and how it compares to the regular city employees.\n#Conclusion from the table\n\nPoint 2: Questions about City Payroll Data\nThese questions help us identify…1\n\nWhich job title has the highest base rate of pay? (If needed, assume a standard 2000 hour work year and no overtime.)\nWhich individual & in what year had the single highest city total payroll (regular and overtime combined)?\nWhich individual worked the most overtime hours in this data set?\nWhich agency has the highest average total annual payroll (base and overtime pay per employee)?\nWhich agency has the most employees on payroll in each year?\nWhich agency has the highest overtime usage (compared to regular hours)?\nWhat is the average salary of employees who work outside the five boroughs? (That is, whose work_location_borough is not one of the five counties.)\nHow much has the city’s aggregate payroll grown over the past 10 years?\n\n##Policy 1: Capping Salaries at Mayoral Level ##Many governments require that the no subordinate employee be paid more than the chief executive (mayor, governor, president)\n\n\nFindings:\n\n\nTotal Mayoral Pay For each Fiscal Year\n\n\nTotal Payroll of Employees Paid More than the Mayor\n\n\nTotal Savings if the Mayor’s Salary Had Been the Cap\n\n\nAgencies and job tilites that would be affected the most\n\n\nImpact on city payroll\n\nHow the total payroll expenses would have changed if that policy had been in place historically?\n\n\n\nStaffing adjustments required to implement Policy 1\n\n\nMy Recommendation to the CATS commissioners on whether this policy should be adopted.\n##Policy 2: Increasing Staffing to Reduce Overtime ### A major driver of payroll expenditures is the “1.5x” premium associated with overtime work. That is, it may be cheaper to hire two employees to each work 30 hours to complete a task than to hire one employee to work 40 regular hours and 20 overtime hours to complete the same task.\n\n\nFindings:\n\nTotal Overtime Hours and Pay by Agency and Job Title\n\n\nTotal Savings by Converting Overtime to Regular Hours by Agency and Job Title\n\n\nAggregate Savings by Agency\n\n\n\nImpact on city payroll\n\nHow the total payroll expenses would have changed if that policy had been in place historically?\n\n\n\nStaffing adjustments required to implement Policy 1\n\n\nMy Recommendation to the CATS commissioners on whether this policy should be adopted.\nBased on my findings above, I reccomend the CATS commissioner to adopt this policy.\n##Policy 3: My Policy Proposal - Combining A Decrease in Hourly Employees and Policy 2 ### Findings: Based on my analysis on the data above the City of New York spends the mosy money by tracking the overtime hours of the employees. The city should hire more employees to reduce the overtime hours, but also decrease the amount of hourly employees they hire. This will allow the eorkload to be spread out amoungst the full time employees with a fixed per Annumm salary and the city will save money in the long run becuase they will not have a large part time workforce to pay overtime wages."
  },
  {
    "objectID": "mp01.html#footnotes",
    "href": "mp01.html#footnotes",
    "title": "Commission to Analyze Taxpayer Spending (CATS)",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nPlease note the following does not include data from the columns regular_gross_paid, total_ot_paid and total_other_paid↩︎\nIn the full length display close to 1000 employees would be affected by this salary cap.↩︎"
  },
  {
    "objectID": "mp01.html#introduction-paragraph",
    "href": "mp01.html#introduction-paragraph",
    "title": "Commission to Analyze Taxpayer Spending (CATS)",
    "section": "",
    "text": "The report analysis below serves to address the NYC’s expenses and identify opportunities to spend taxpayer monies more effectively.\nGoal: To analyze the City Payroll and report possible savings for CATS Commissioners consideration\n\n\nThe following table addresses the salaries of the NYC Mayor, Mr. Adams over the span of his career in public office. This data forces us to look at the way in which taxpayer monies are spent on highly ranked offcials like Mr. Adams and how it compares to the regular city employees.\n\n\nCode\nif (!requireNamespace(\"httr2\", quietly = TRUE)) install.packages(\"httr2\")\nif (!requireNamespace(\"jsonlite\", quietly = TRUE)) install.packages(\"jsonlite\")\nif (!requireNamespace(\"dplyr\", quietly = TRUE)) install.packages(\"dplyr\")\nif (!requireNamespace(\"readr\", quietly = TRUE)) install.packages(\"readr\")\nif (!requireNamespace(\"stringr\", quietly = TRUE)) install.packages(\"stringr\")\nif (!requireNamespace(\"DT\", quietly = TRUE)) install.packages(\"DT\")\n\nlibrary(httr2)\nlibrary(jsonlite)\nlibrary(dplyr)\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n\nCode\nlibrary(readr)\nlibrary(stringr)\nlibrary(DT)\n\n\nWarning: package 'DT' was built under R version 4.4.3\n\n\nCode\nif (file.exists(\"data/mp01/nyc_payroll_export.csv\")) {\n  payroll_data &lt;- read_csv(\"data/mp01/nyc_payroll_export.csv\")\n} else {\n  stop(\"CSV file not found!\")\n}\n\n\nRows: 6225611 Columns: 17\n\n\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (8): agency_name, last_name, first_name, mid_init, work_location_boroug...\ndbl  (8): fiscal_year, payroll_number, base_salary, regular_hours, regular_g...\ndttm (1): agency_start_date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\npayroll_data &lt;- read_csv(\"data/mp01/nyc_payroll_export.csv\")\n\n\nRows: 6225611 Columns: 17\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (8): agency_name, last_name, first_name, mid_init, work_location_boroug...\ndbl  (8): fiscal_year, payroll_number, base_salary, regular_hours, regular_g...\ndttm (1): agency_start_date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\npayroll_data &lt;- payroll_data |&gt; \n  mutate(\n    agency_name = str_to_title(agency_name),\n    last_name  = str_to_title(last_name),\n    first_name = str_to_title(first_name),\n    work_location_borough = str_to_title(work_location_borough),\n    title_description = str_to_title(title_description),\n    leave_status_as_of_june_30 = str_to_title(leave_status_as_of_june_30)\n     ) |&gt;\n  rename(\n    `Fiscal Year`    = fiscal_year,\n    `Agency Name`    = agency_name,\n    `First Name`     = first_name,\n    `Middle Initial` = mid_init,\n    `Last Name`      = last_name,\n    `Position`       = title_description,\n    `Base Salary`    = base_salary,\n    `Start Date`     = agency_start_date,\n    `Reg Hours`      = regular_hours,\n    `Overtime Hours` = ot_hours,\n    `Additional Pay` = total_other_pay,\n    `Payroll Number` = payroll_number,\n    `Work Location`  = work_location_borough,\n    `Leave Status`   = leave_status_as_of_june_30,\n    `Pay Basis`      = pay_basis,\n    `Gross Paid`     = regular_gross_paid,\n    `Overtime Paid`  = total_ot_paid\n  ) \n\npayroll_data_filtered &lt;- payroll_data |&gt;\n  filter(`Gross Paid` &gt;= 0) \n\neric_adams_data &lt;- payroll_data_filtered |&gt;\n    filter(`First Name` == \"Eric\", `Middle Initial` == \"L\", `Last Name` == \"Adams\") |&gt;\n    mutate(`Total Salary` = `Gross Paid` + `Overtime Paid` + `Additional Pay`) |&gt;\n  group_by(`Fiscal Year`) \n\neric_adams_career &lt;- eric_adams_data |&gt;\n  group_by(`Fiscal Year`, `Agency Name`) |&gt;\n  summarise(\n    `Total Salary` = sum(`Total Salary`, na.rm = TRUE),\n    `Position` = paste(unique(`Position`), collapse = \",\"),\n    .groups = \"drop\"\n    ) \n\n\n\n\nShow code\ndatatable(eric_adams_career, caption = 'Table 1: This table displays the career of NYC Mayor Eric L Adams.', options = list(pageLength = nrow(eric_adams_career), autoWidth = TRUE),\n            filter = \"top\", \n            extensions = c(\"Buttons\", \"Scroller\"),\n            class = \"display\",\n            rownames = FALSE) |&gt;\n  formatCurrency(c(\"Total Salary\"), currency = \"$\", interval = 3, mark = \",\") |&gt;\n  formatStyle(c(\"Total Salary\"), backgroundColor = \"#f2f2f2\") |&gt;\n  formatStyle(c(\"Fiscal Year\"), fontWeight = \"bold\", color = \"#333333\") |&gt;\n  formatStyle(c(\"Agency Name\"), fontWeight = \"bold\", color = \"#333333\")|&gt;\n  formatStyle(c(\"Position\"), fontWeight = \"bold\", color = \"#333333\") |&gt;\n  formatStyle(c(\"Total Salary\"), fontWeight = \"bold\", color = \"#333333\")"
  },
  {
    "objectID": "mp01.html#conclusion-from-the-table",
    "href": "mp01.html#conclusion-from-the-table",
    "title": "Commission to Analyze Taxpayer Spending (CATS)",
    "section": "Conclusion from the table",
    "text": "Conclusion from the table\nThe Mayor’s salary has consistenly increased with since he became Borough President of Brooklyn. As we analyze the data we will see that this adjustment of mayor’s salary every year is something that differs from non high ranking employees in NYC’s payroll.\n\nPoint 2 - Findings for City Payroll Data for Analysis\nThe following statistics1 found in the city payroll dataset will help us identify certain factors to consider as we conduct analysis for the purposes of recommending the best policy for adoption by the CATS commission.\n\nJob title with the highest base rate of pay\n\n\n\n\n\n\n\nThe job title with the highest base rate of pay is the Chief Actuary who has a per Annum salary of $296,470.38. The salary of the Chief Actuary is more comparable to the Mayor than the non high ranking government employees as it is a fixed salary.\n\nEmployee with the single highest city total payroll (year included)\n\n\n\n\n\n\n\nThe governemnt employee with the single highest city total payroll is Pavel Kotelevich, Chief Marine Engineer. Pavel’s total payroll is $697,052.01. This amount includes his base salary per annum and overtime wages paid. Since Pavel had over 1000 hours of overtime hours he received substanial overtime wages while recieving a fixed salary.\n\nEmployee with the most overtime hours\n\n\n\n\n\n\n\nThis table displays how overtime is prevalent in the Department of Correction, as James Inernicola has one of the highest overtime hours. A conclusion we can draw from this display is that the Department of Correction must allocate a part of it’s budget to overtime wages for the police force. Therefore, the city’s payroll must allocate a part of it’s budeget for overtime for large department’s like the Department of Correction.\n\nAgency with the highest average total annual payroll\n\n\n\n\n\n\n\n\nAgency with the most employees on payroll in each year\n\n\n\n\n\n\n\n\nAgency with the highest overtime usage (compared to regular hours)\n\n\n\n\n\n\n\n\nAverage salary of employees who work outside the five boroughs\n\n\n\n\n\n\n\n\nNew York City’s aggregate payroll over the past 10 years\n\n\n\n\n\n\n\nThe growth rate from 2014 to 2024 is approximately 46.86%. This is the percentage increase in the total payroll from 2014 to 2024 whic is a 10 year span."
  },
  {
    "objectID": "mp01.html#policy-1---capping-salaries-at-mayoral-level",
    "href": "mp01.html#policy-1---capping-salaries-at-mayoral-level",
    "title": "Commission to Analyze Taxpayer Spending (CATS)",
    "section": "Policy 1 - Capping Salaries at Mayoral Level",
    "text": "Policy 1 - Capping Salaries at Mayoral Level\nThe data set contains information on the different tiers of income for employees (i.e. per annum, per hour, etc.) The main group of employee with a fixed salary (per Annum) are high ranking officials including the Mayor Eric L Adams. The following findings showcase the results of capping all employee wages at the Mayoral Level.\n\nTotal Mayoral Pay For each Fiscal Year\nThe following table displays the salary of the Mayor Eric L Adams from 2014 to 2024.\n\n\n\n\n\n\n\n\nTotal Payroll of Employees Paid More than the Mayor\n\n\n\n\n\n\nBased on the data displayed in the table, there are over 90 employees who make more than the Mayor Eric L Adams each fiscal year. This table allows us to conclude that fixed salaries are not based on title in the NYC government. Therefore, capping the salary at the mayoral level may be feasible given that the position holds no weight in payroll.\n\n\nTotal Savings if the Mayor’s Salary is the Limit\n\n\n\n\n\n\nAccording to the table above, the total savings generated each year by capping employee salary based on the Mayor’s Salary does not exceed $200,000.\n\n\nAgencies and positions that would be affected the most by this policy\nThe following table displays only the top earning employees of each fiscal year who would be affected.\n\n\n\n\n\n\nAccording to this table above, over 90 employees will be affected by the adoption of this policy.2 The Commission may need to consider the affects this would have on the employees who believe their salary is correct for the workload and position they have.\n\n\nRecommendation to the CATS commissioners on whether this policy should be adopted.\nBased on findings above, we do not recommend the CATS Commissioners to adopt this policy because the total savings generated by capping employee salary based on the Mayor’s Salary does not exceed $200,000 regardless of the year. In addition, the city would lose 102,793.00 if this policy was enacted in 2022. This policy would affected a large part of the city workforce, which may cause turnover rates to skyrocket."
  },
  {
    "objectID": "mp01.html#policy-2---increasing-staffing-to-reduce-overtime",
    "href": "mp01.html#policy-2---increasing-staffing-to-reduce-overtime",
    "title": "Commission to Analyze Taxpayer Spending (CATS)",
    "section": "Policy 2 - Increasing Staffing to Reduce Overtime",
    "text": "Policy 2 - Increasing Staffing to Reduce Overtime\nThe data set showcases how overtime accounts for a large portion of city payroll. The following analyzes the potential upside of increasing staffing to reduce the effects of overtime expenses.\n\nTotal Overtime Hours and Pay by Agency and Job Title\n\n\n\n\n\n\nAccording to this table, there are over 27,000 positions where overtime hours are logged in each agency every fiscal year. The agencies may benefit from a reduction in the workforce due to the millions spent every year to fund the overtime of these positions.\n\n\nCorrelation between increase in employees hired and overtime hours\n\n\n\nAttaching package: 'scales'\n\n\nThe following object is masked from 'package:readr':\n\n    col_factor\n\n\n\n\n\n\n\n\n\nThe correlation between employee count and overtime hours is 0.6179. Therefore, as employee hiring increases the amount of overtime hours will also increase. This suggests that hiring more employees could increase overtime expenses.\n\n\nRecommendation to the CATS commissioners on whether this policy should be adopted.\nBased on the findings above, I recommend the CATS commissioner to adopt this policy with caution. I support this policy due to the millions that would be saved over time from the increase in staff."
  },
  {
    "objectID": "mp01.html#policy-3-my-policy-proposal---combining-a-decrease-in-hourly-employees-and-policy-2",
    "href": "mp01.html#policy-3-my-policy-proposal---combining-a-decrease-in-hourly-employees-and-policy-2",
    "title": "Commission to Analyze Taxpayer Spending (CATS)",
    "section": "Policy 3: My Policy Proposal - Combining A Decrease in Hourly Employees and Policy 2",
    "text": "Policy 3: My Policy Proposal - Combining A Decrease in Hourly Employees and Policy 2\n\nConclusion based on full analysis of dataset:\nBased on my analysis of the data set, the City of New York spends most of it’s money on overtime expenses of the employees. The City should hire more employees to reduce the overtime hours, but also decrease the amount of hourly employees they hire. This has two advantages for the City Payroll. First, it will allow the workload to be spread out amount the full time employees with a fixed per Annual salary. Second, the City will save money in the long term because it will not have a large part time workforce to pay overtime wages.\n\nTable of Total Savings from Policy 3\nThe following table generates total savings (per Agency and Per fiscal year) from the reduction of overtime expenses and from the reduction in the number of hourly employees.\n\n\n\n\n\n\n\n\n\nRecommendation to the CATS commissioners on whether this policy should be adopted.\nFrom the table above, I can conclude that millions of dollars would be saved in each agency per fiscal year if this policy was adopted.\n\nLast Updated: Tuesday 03 04, 2025 at 23:03PM"
  },
  {
    "objectID": "mp02.html",
    "href": "mp02.html",
    "title": "Green Transit Alliance for Investigation of Variance (GTA IV) ‘Greenest’ Awards",
    "section": "",
    "text": "The Green Transit Alliance for Investigation of Variance (GTA IV) is excited to announce the three GTA IV Green Transit Awards winners for the following awards: Greenest Transit Agency, Agency with the Highest Percentage of Electrification, Worst Agency by Highest Total Emissions. We reserved a honorable mention for the Best Small, Medium and Large Agencies at the end.\n\n\n\nGreenest Transit Agency:\n\nThe Greenest Transit Agency award goes to the agency with the lowest emissions per passenger mile. The winner of this award is the “City Of Portland” with an average of 0 pounds of CO2 per passenger mile. This agency has demonstrated a commitment to reducing its carbon footprint and promoting sustainable transportation practices. \n\n\nAgency with the Highest Percentage of Electrification:\n\nThe Agency with the Highest Percentage of Electrification award goes to the agency with the highest percentage of electric propulsion vehicles in its fleet. The winner of this award is the “City Of Portland” with 100% of its fleet using electric propulsion. This agency has shown a strong commitment to reducing emissions and transitioning to cleaner energy sources. \n\n\nWorst Agency based on Highest Total Emissions\n\nThe Worst Agency award goes to the agency with the highest total emissions. The winner of this award is the “New Jersey Transit Corporation” with a total of 875972108 pounds of CO2 emitted. This agency has the highest total emissions, indicating a need for improvement in reducing its carbon footprint and promoting sustainable transportation practices.\n\n\n\nData Import and Data Cleaning\n The data was imported from various sources, including the Energy Information Administration (EIA) and the National Transit Database (NTD). The data was cleaned and processed to calculate emissions, normalize emissions to transit usage, and categorize emissions based on specific criteria. The data was then analyzed to identify the winners of the GTA IV Green Transit Awards.\nThe data code is hidden for readability. To view the code, click on the “Show Code” button below each section.\n\n\nCode\n#The following Code loads the required libraries and packages\nensure_package &lt;- function(pkg){\n  pkg &lt;- as.character(substitute(pkg))\n  options(repos = c(CRAN = \"https://cloud.r-project.org\"))\n  if(!require(pkg, character.only=TRUE)) install.packages(pkg)\n  stopifnot(require(pkg, character.only=TRUE))\n}\n\nensure_package(dplyr)\nensure_package(httr2)\nensure_package(rvest)\nensure_package(datasets)\nensure_package(purrr)\nensure_package(DT)\nensure_package(stringr)\n\n#The following code loads the required data\nget_eia_sep &lt;- function(state, abbr){\n  state_formatted &lt;- str_to_lower(state) |&gt; str_replace_all(\"\\\\s\", \"\")\n  \n  dir_name &lt;- file.path(\"data\", \"mp02\")\n  file_name &lt;- file.path(dir_name, state_formatted)\n  \n  dir.create(dir_name, showWarnings=FALSE, recursive=TRUE)\n  \n  if(!file.exists(file_name)){\n    BASE_URL &lt;- \"https://www.eia.gov\"\n    REQUEST &lt;- request(BASE_URL) |&gt; \n      req_url_path(\"electricity\", \"state\", state_formatted)\n    \n    RESPONSE &lt;- req_perform(REQUEST)\n    \n    resp_check_status(RESPONSE)\n    \n    writeLines(resp_body_string(RESPONSE), file_name)\n  }\n  \n  TABLE &lt;- read_html(file_name) |&gt; \n    html_element(\"table\") |&gt; \n    html_table() |&gt;\n    mutate(Item = str_to_lower(Item))\n  \n  if(\"U.S. rank\" %in% colnames(TABLE)){\n    TABLE &lt;- TABLE |&gt; rename(Rank = `U.S. rank`)\n  }\n  \n  CO2_MWh &lt;- TABLE |&gt; \n    filter(Item == \"carbon dioxide (lbs/mwh)\") |&gt;\n    pull(Value) |&gt; \n    str_replace_all(\",\", \"\") |&gt;\n    as.numeric()\n  \n  PRIMARY &lt;- TABLE |&gt; \n    filter(Item == \"primary energy source\") |&gt; \n    pull(Rank)\n  \n  RATE &lt;- TABLE |&gt;\n    filter(Item == \"average retail price (cents/kwh)\") |&gt;\n    pull(Value) |&gt;\n    as.numeric()\n  \n  GENERATION_MWh &lt;- TABLE |&gt;\n    filter(Item == \"net generation (megawatthours)\") |&gt;\n    pull(Value) |&gt;\n    str_replace_all(\",\", \"\") |&gt;\n    as.numeric()\n  \n  data.frame(CO2_MWh               = CO2_MWh, \n             primary_source        = PRIMARY,\n             electricity_price_MWh = RATE * 10, # / 100 cents to dollars &\n             # * 1000 kWh to MWH \n             generation_MWh        = GENERATION_MWh, \n             state                 = state, \n             abbreviation          = abbr\n  )\n}\n\nEIA_SEP_REPORT &lt;- map2(state.name, state.abb, get_eia_sep) |&gt; list_rbind()\n\n\n ##### The datable below presents the data used to determine the winners of the GTA IV Green Transit Awards. The data includes information on the pounds of CO2 emitted per MWh of electricity produced, the primary source of electricity generation, the average retail price for 1000 kWh, and the total generation capacity in MWh for each state. The data has been cleaned and formatted for analysis. \n\n\nCode\nensure_package(scales)\nensure_package(DT)\n\n#The following code cleans the data and answers the questions\nEIA_SEP_REPORT &lt;- EIA_SEP_REPORT |&gt; \n  select(-abbreviation) |&gt;\n  arrange(desc(CO2_MWh)) |&gt;\n  mutate(CO2_MWh = number(CO2_MWh, big.mark=\",\"), \n         electricity_price_MWh = dollar(electricity_price_MWh), \n         generation_MWh = number(generation_MWh, big.mark=\",\")) |&gt;\n  rename(`Pounds of CO2 Emitted per MWh of Electricity Produced`=CO2_MWh, \n         `Primary Source of Electricity Generation`=primary_source, \n         `Average Retail Price for 1000 kWh`=electricity_price_MWh, \n         `Total Generation Capacity (MWh)`= generation_MWh, \n         State=state)\n# Display the table with formatting and caption\ndatatable(EIA_SEP_REPORT, caption = htmltools::tags$caption(\n  style = \"font-size: 18px;\", \"Table 1: State Electricity Profiles\"),\n  options = list( autoWidth = TRUE),\n  rownames = FALSE) |&gt;\n  formatStyle(columns = \"Pounds of CO2 Emitted per MWh of Electricity Produced\", \n              backgroundColor = \"#f2f2f2\", \n              fontWeight = 'bold') |&gt;\n  formatStyle(columns = \"Average Retail Price for 1000 kWh\", \n              backgroundColor = \"#f2f2f2\", \n              fontWeight = 'bold') |&gt;\n  formatStyle(columns = \"Total Generation Capacity (MWh)\", \n              backgroundColor = \"#f2f2f2\", \n              fontWeight = 'bold') |&gt;\n  formatStyle(columns = \"Primary Source of Electricity Generation\", \n              backgroundColor = \"#f2f2f2\", \n              fontWeight = 'bold') |&gt;\n  formatStyle(columns = \"State\",\n              backgroundColor = \"#f2f2f2\", \n              fontWeight = 'bold')\n\n\n\n\n\n\n ### Initial Analysis of SEP Data  The following data tables provide insights into analysis of the SEP Data. The tables answer the following questions: \n\n\n1. Which state has the most expensive retail electricity?\nThe state with the most expensive retail electricity is Hawaii with an average retail price of $33.01 for 1000 kWh or $386. \n\n\nCode\n#Question 1:\n#Which state has the most expensive retail electricity?\nEIA_SEP_REPORT_TOP_STATE &lt;- EIA_SEP_REPORT |&gt; \n  select(State,`Average Retail Price for 1000 kWh` ) |&gt;\n  mutate(`Average Retail Price for 1000 kWh` = as.numeric(str_replace_all(`Average Retail Price for 1000 kWh`, \"[^0-9\\\\.]\", \"\"))) |&gt;\n  arrange(desc(`Average Retail Price for 1000 kWh`))|&gt; \n  slice(1)\n\nEIA_SEP_REPORT_TOP_STATE &lt;- EIA_SEP_REPORT_TOP_STATE |&gt; \n  mutate(`Average Retail Price for 1000 kWh` = dollar(`Average Retail Price for 1000 kWh`))\n\n# Display the table with formatting and caption\ndatatable(EIA_SEP_REPORT_TOP_STATE, caption = htmltools::tags$caption(\n  style = \"font-size: 18px;\", \"Table 2: State with the most expensive retail electricity\"), rownames =   FALSE,\n  options = list(dom = 't', paging = FALSE, searching = FALSE, ordering = FALSE)) |&gt;\n  formatStyle(columns = \"Average Retail Price for 1000 kWh\", \n              backgroundColor = \"#FFCCCB\", \n              fontWeight = 'bold')\n\n\n\n\n\n\n ### 2. Which state has the ‘dirtiest’ electricity mix?\nThe state with the ‘dirtiest’ electricity mix is West Virginia with 1,925 pounds of CO2 emitted per MWh of electricity produced. \n\n\nCode\n#Question 2:\n#Which state has the 'dirtiest' electricity mix?\n# Step 1: Process and clean the data first, and assign it to the EIA_SEP_REPORT_DIRTIEST variable\nEIA_SEP_REPORT_DIRTIEST &lt;- EIA_SEP_REPORT |&gt; \n  filter(!is.na(`Pounds of CO2 Emitted per MWh of Electricity Produced`)) |&gt;  # Remove NAs\n  select(State, `Pounds of CO2 Emitted per MWh of Electricity Produced`) |&gt;\n  # Clean the column, remove any non-numeric characters, and convert to numeric\n  mutate(`Pounds of CO2 Emitted per MWh of Electricity Produced` = \n           as.numeric(str_replace_all(`Pounds of CO2 Emitted per MWh of Electricity Produced`, \"[^0-9\\\\.]\", \"\"))) |&gt;\n  arrange(desc(`Pounds of CO2 Emitted per MWh of Electricity Produced`)) |&gt;  # Sort in descending order\n  slice(1) |&gt;  # Select the state with the highest emissions\n  # Apply formatting after ensuring numeric type\n  mutate(`Pounds of CO2 Emitted per MWh of Electricity Produced` = \n           number(`Pounds of CO2 Emitted per MWh of Electricity Produced`, big.mark=\",\"))\n\n# Display the table with formatting and caption\ndatatable(EIA_SEP_REPORT_DIRTIEST, \n          caption = htmltools::tags$caption(\n            style = \"font-size: 16px;\", \"Table 3: State with the dirtiest electricity mix\"), rownames = FALSE,\n          options = list(dom = 't', paging = FALSE, searching = FALSE, ordering = FALSE)) |&gt;\n  formatStyle(columns = \"Pounds of CO2 Emitted per MWh of Electricity Produced\", \n              backgroundColor = \"#FFCCCB\", \n              fontWeight = 'bold')\n\n\n\n\n\n\n\n\n\n3. On average, how many pounds of CO2 are emitted per MWh of electricity produced in the US?\nThe weighted average of CO2 that are emitted per MWh of electricity produced in the US is 805. \n\n\nCode\n#Question 3: \n#On average, how many pounds of CO2 are emitted per MWh of electricity produced in the US? (Note that you will need to use a suitably weighted average here.)\nEIA_SEP_REPORT_WEIGHTED_AVG &lt;- EIA_SEP_REPORT |&gt; \n  filter(!is.na(`Pounds of CO2 Emitted per MWh of Electricity Produced`)) |&gt;  # Remove NAs\n  select(`Pounds of CO2 Emitted per MWh of Electricity Produced`, `Total Generation Capacity (MWh)`) |&gt;\n  mutate(`Pounds of CO2 Emitted per MWh of Electricity Produced` = \n           as.numeric(str_replace_all(`Pounds of CO2 Emitted per MWh of Electricity Produced`, \"[^0-9\\\\.]\", \"\"))) |&gt;\n  mutate(`Total Generation Capacity (MWh)` =\n           as.numeric(str_replace_all(`Total Generation Capacity (MWh)`, \"[^0-9\\\\.]\", \"\"))) |&gt;\n  # Calculate the weighted CO2 emissions\n  mutate(weighted_CO2 = `Pounds of CO2 Emitted per MWh of Electricity Produced` * `Total Generation Capacity (MWh)`) |&gt;\n  summarise(weighted_avg_CO2 = sum(weighted_CO2) / sum(`Total Generation Capacity (MWh)`)) |&gt;\n  mutate(weighted_avg_CO2 = number(weighted_avg_CO2, big.mark=\",\"))\n\n#Display the result the weighted average CO2 emissions per MWh of electricity produced in the US\ndatatable(EIA_SEP_REPORT_WEIGHTED_AVG, \n          caption = htmltools::tags$caption(\n            style = \"font-size: 18px;\", \"Weighted Average of CO2 Emissions per MWh of Electricity Produced accross all states in the US\") ,rownames = FALSE,\n          options = list(dom = 't', paging = FALSE, searching = FALSE, ordering = FALSE)) |&gt;\n  formatStyle(columns = \"weighted_avg_CO2\", \n              backgroundColor = \"#FFCCCB\", \n              fontWeight = 'bold')\n\n\n\n\n\n\n ### 4. What is the rarest primary energy source in the US? What is the associated cost of electricity and where is it used?\nThe rarest primary energy source in the US is Petroleun with an average retail price of 386 for 1000 kWh. It is most commonly used in Hawaii. \n\n\nCode\n#Question 4\n#What is the rarest primary energy source in the US? What is the associated cost of electricity and where is it used?\nEIA_SEP_REPORT_RAREST_ENERGY_SOURCE_STATE &lt;- EIA_SEP_REPORT |&gt;\n  select(State, `Primary Source of Electricity Generation`, `Average Retail Price for 1000 kWh`) |&gt;\n  group_by(`Primary Source of Electricity Generation`) |&gt;\n  summarise(\n    count = n(),\n    `Average Retail Price for 1000 kWh` = mean(as.numeric(str_replace_all(`Average Retail Price for 1000 kWh`, \"[^0-9\\\\.]\", \"\")), na.rm = TRUE),\n    State = names(sort(table(State), decreasing = TRUE))[1]  # Get the state with the most occurrences\n  ) |&gt;\n  arrange(count) |&gt;\n  slice(1)  # This will give you the rarest energy source with the average price and most common state\nEIA_SEP_REPORT_RAREST_ENERGY_SOURCE_STATE &lt;- EIA_SEP_REPORT_RAREST_ENERGY_SOURCE_STATE |&gt;\n  mutate(`Average Retail Price for 1000 kWh` = dollar(`Average Retail Price for 1000 kWh`)) |&gt;\n  select(-count)  # Remove the count column\n# Display result as a datatable\ndatatable(EIA_SEP_REPORT_RAREST_ENERGY_SOURCE_STATE, \n          caption = htmltools::tags$caption(\n            style = \"font-size: 18px;\", \n            \"Table 4: Rarest Primary Energy Source with Average Retail Price and Most Common State\"\n          ), rownames = FALSE,\n          options = list(dom = 't', paging = FALSE, searching = FALSE, ordering = FALSE)) |&gt;\n  formatStyle(columns = c(\"Average Retail Price for 1000 kWh\"), \n              backgroundColor = \"#f2f2f2\", \n              fontWeight = 'bold')\n\n\n\n\n\n\n ### 5. Compare NY’s energy mix than that of Texas?\nNew York’s energy mix is 1.5 times cleaner than that of Texas. \n\n\nCode\n#Question 5:\n#How many times cleaner is NY’s energy mix than that of Texas?\nEIA_SEP_REPORT_CLEANER_MIX &lt;- EIA_SEP_REPORT |&gt;\n  select(State, `Pounds of CO2 Emitted per MWh of Electricity Produced`) |&gt;\n  filter(State %in% c(\"New York\", \"Texas\")) |&gt;\n  mutate(`Pounds of CO2 Emitted per MWh of Electricity Produced` = as.numeric(str_replace_all(`Pounds of CO2 Emitted per MWh of Electricity Produced`, \"[^0-9\\\\.]\", \"\"))) |&gt;\n  arrange(State) |&gt;  # Arrange the data by State for clarity\n  group_by(State) |&gt;  # Group by state to compute values for each one separately\n  summarise(\n    `Pounds of CO2 Emitted per MWh of Electricity Produced` = mean(`Pounds of CO2 Emitted per MWh of Electricity Produced`, na.rm = TRUE),\n    .groups = 'drop'\n  ) |&gt;  # Ensure no lingering grouping after summarising\n  mutate(ratio = `Pounds of CO2 Emitted per MWh of Electricity Produced`[State == \"New York\"] /\n           `Pounds of CO2 Emitted per MWh of Electricity Produced`[State == \"Texas\"]) |&gt;\n  mutate(ratio = round(ratio, 2))  \n\n# Display the result as a datatable\n\ndatatable(EIA_SEP_REPORT_CLEANER_MIX, rownames = FALSE, caption = htmltools::tags$caption(\n  style = \"font-size: 18px;\",\"Table 5: New York's energy mix compared to Texas's energy mix (by cleanliest)\"),\n  options = list(dom = 't', paging = FALSE, searching = FALSE, ordering = FALSE)) |&gt;\n  formatStyle(columns = \"State\",  # Format based on the \"State\" column\n              target = 'row',  # Apply style to entire row\n              backgroundColor = styleEqual(c(\"New York\", \"Texas\"), c(\"#f2f2f2\", \"#DCDCDC\")),\n              fontWeight = 'bold')\n\n\n\n\n\n\n\n\nData Import For the National Transit Database (NTD) Energy Data\n The following code imports the National Transit Database (NTD) data for analysis. The data includes information on energy consumption, service, and transit modes for various agencies. The data is cleaned and processed to calculate emissions, normalize emissions to transit usage, and categorize emissions based on specific criteria. The data is then analyzed to identify the winners of the GTA IV Green Transit Awards.\nThe datatable in the following code displays the unique modes of transportation in the NTD Energy data.\n\n\nCode\n#Data Import Part 2\n#Annual Database Energy Consumption 2023  \nensure_package(readxl)\n# Create 'data/mp02' directory if not already present\nDATA_DIR &lt;- file.path(\"data\", \"mp02\")\ndir.create(DATA_DIR, showWarnings=FALSE, recursive=TRUE)\n\nNTD_ENERGY_FILE &lt;- file.path(DATA_DIR, \"2023_ntd_energy.xlsx\")\n\nif(!file.exists(NTD_ENERGY_FILE)){\n  DS &lt;- download.file(\"https://www.transit.dot.gov/sites/fta.dot.gov/files/2024-10/2023%20Energy%20Consumption.xlsx\", \n                      destfile=NTD_ENERGY_FILE, \n                      method=\"curl\")\n  \n  if(DS | (file.info(NTD_ENERGY_FILE)$size == 0)){\n    cat(\"I was unable to download the NTD Energy File. Please try again.\\n\")\n    stop(\"Download failed\")\n  }\n}\n\nNTD_ENERGY_RAW &lt;- read_xlsx(NTD_ENERGY_FILE)\n\nensure_package(tidyr)\nto_numeric_fill_0 &lt;- function(x){\n  x &lt;- if_else(x == \"-\", NA, x)\n  replace_na(as.numeric(x), 0)\n}\n#Clean up data\nNTD_ENERGY &lt;- NTD_ENERGY_RAW |&gt; \n  select(-c(`Reporter Type`, \n            `Reporting Module`, \n            `Other Fuel`, \n            `Other Fuel Description`)) |&gt;\n  mutate(across(-c(`Agency Name`, \n                   `Mode`,\n                   `TOS`), \n                to_numeric_fill_0)) |&gt;\n  group_by(`NTD ID`, `Mode`, `Agency Name`) |&gt;\n  summarize(across(where(is.numeric), sum), \n            .groups = \"keep\") |&gt;\n  mutate(ENERGY = sum(c_across(c(where(is.numeric))))) |&gt;\n  filter(ENERGY &gt; 0) |&gt;\n  select(-ENERGY) |&gt;\n  ungroup()\n\n# Display 10 random rows\nslice_sample(NTD_ENERGY , n=10)\n\n\n# A tibble: 10 × 16\n   `NTD ID` Mode  `Agency Name`       `Bio-Diesel` `Bunker Fuel` `C Natural Gas`\n      &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;                      &lt;dbl&gt;         &lt;dbl&gt;           &lt;dbl&gt;\n 1    20206 MB    County of Nassau               0             0         3406655\n 2    90016 DR    Golden Gate Bridge…            0             0               0\n 3    30083 MB    Transportation Dis…            0             0               0\n 4    40008 CB    City of Charlotte …            0             0               0\n 5    10003 LR    Massachusetts Bay …            0             0               0\n 6    40087 MB    City of Durham            254651             0               0\n 7       18 MB    Ben Franklin Trans…            0             0               0\n 8    60088 MB    Jefferson Parish          414008             0               0\n 9    20188 MB    MTA Bus Company                0             0         2038747\n10    70003 DR    City of Springfield            0             0               0\n# ℹ 10 more variables: `Diesel Fuel` &lt;dbl&gt;, `Electric Battery` &lt;dbl&gt;,\n#   `Electric Propulsion` &lt;dbl&gt;, Ethanol &lt;dbl&gt;, Methonal &lt;dbl&gt;, Gasoline &lt;dbl&gt;,\n#   Hydrogen &lt;dbl&gt;, Kerosene &lt;dbl&gt;, `Liquified Nat Gas` &lt;dbl&gt;,\n#   `Liquified Petroleum Gas` &lt;dbl&gt;\n\n\nCode\nunique(NTD_ENERGY$Mode)\n\n\n [1] \"DR\" \"FB\" \"MB\" \"SR\" \"TB\" \"VP\" \"CB\" \"RB\" \"LR\" \"MG\" \"CR\" \"AR\" \"TR\" \"HR\" \"YR\"\n[16] \"IP\" \"PB\" \"CC\"\n\n\nCode\n# Get unique Mode codes from the data\nunique_modes &lt;- NTD_ENERGY |&gt;\n  distinct(Mode)  # This will return only the unique Mode values\n\n# Display the unique Mode codes\n#print(unique_modes)\ndatatable(unique_modes, caption = \"Unique Modes in NTD_Energy\")\n\n\n\n\n\n\n ### Recoding the Mode Column\nThe following code recodes the Mode column in the NTD Energy data to change the names of the unique modes to more descriptive names. This recoding will make the data more readable and easier to interpret for analysis.\n\n\nCode\n#Recoding the Mode Column - changing the names of the unique modes in the Mode column \nNTD_ENERGY &lt;- NTD_ENERGY |&gt;\n  mutate(Mode=case_when(\n    Mode == \"DR\"  ~ \"Demand Response\",  \n    Mode == \"FB\"  ~ \"Ferryboat\",\n    Mode == \"MB\"  ~ \"Motorbus\" ,\n    Mode == \"SR\"  ~ \"Street Car Rail\",\n    Mode == \"TB\"  ~ \"Trolleybus\",\n    Mode == \"VP\"  ~ \"Vanpool\",\n    Mode == \"CB\" ~ \"Commuter Bus\",\n    Mode == \"RB\" ~ \"Rapid Bus\" , \n    Mode == \"LR\" ~ \"Light Rail\",\n    Mode == \"MG\" ~ \"Monorail Guideway\",\n    Mode == \"CR\" ~ \"Commuter Rail\",\n    Mode == \"AR\" ~ \"Alaska Railroad\",  \n    Mode == \"TR\" ~ \"Aerial Tramway\",\n    Mode == \"HR\" ~ \"Heavy Rail\",\n    Mode == \"YR\" ~ \"Hybrid Rail\",  \n    Mode == \"IP\" ~ \"Inclined Plane Vehicle\", \n    Mode == \"PB\" ~ \"Publico Mode\",\n    Mode == \"CC\" ~ \"Cable Car\",\n    TRUE ~ \"Unknown\"))\n\n\n ### Data Import for the NTD Service Data\nThe following code imports the National Transit Database (NTD) Service data for analysis. The data includes information on transit service, unlinked passenger trips, and passenger miles for various agencies. The data is cleaned and processed to calculate emissions, normalize emissions to transit usage, and categorize emissions based on specific criteria. The data is then analyzed to identify the winners of the GTA IV Green Transit Awards.\n\n\nCode\n#Data Import Part 3\n# Annual Database Service by Agency 2023\n# \nensure_package(readr)\nNTD_SERVICE_FILE &lt;- file.path(DATA_DIR, \"2023_service.csv\")\nif(!file.exists(NTD_SERVICE_FILE)){\n  DS &lt;- download.file(\"https://data.transportation.gov/resource/6y83-7vuw.csv\", \n                      destfile=NTD_SERVICE_FILE, \n                      method=\"curl\")\n  \n  if(DS | (file.info(NTD_SERVICE_FILE)$size == 0)){\n    cat(\"I was unable to download the NTD Service File. Please try again.\\n\")\n    stop(\"Download failed\")\n  }\n}\n\nNTD_SERVICE_RAW &lt;- read_csv(NTD_SERVICE_FILE)\n\n#Clean up data\nNTD_SERVICE &lt;- NTD_SERVICE_RAW |&gt;\n  mutate(`NTD ID` = as.numeric(`_5_digit_ntd_id`)) |&gt; \n  rename(Agency = agency, \n         City   = max_city, \n         State  = max_state,\n         UPT    = sum_unlinked_passenger_trips_upt, \n         MILES  = sum_passenger_miles) |&gt;\n  select(matches(\"^[A-Z]\", ignore.case=FALSE)) |&gt;\n  filter(MILES &gt; 0)\n\n\n ### Initial Analysis of NTD Service Data\nThe following data tables provide insights into the analysis of the NTD Service Data. The tables answer the following questions:\n\n\n1. Which transit service has the most UPT annually?\nThe transit service with the most UPT annually is “MTA New York City Transit” with a total of 2,632,003,044 UPT. \n\n\nCode\n#Task 4: Explore NTD Service Data\n#Which transit service has the most UPT annually?\nNTD_SERVICE_HighUPT &lt;- NTD_SERVICE |&gt;\n  # Find the transit service with the most UPT annually\n  group_by(Agency, City, State) |&gt;\n  summarize(Total_UPT = sum(UPT, na.rm = TRUE), .groups = \"drop\") |&gt;\n  arrange(desc(Total_UPT)) |&gt;\n  slice(1)|&gt;  # Get the transit service with the most UPT\n  mutate(Total_UPT = scales::comma(Total_UPT))  # Add commas to Total UPT\n# Display the result\ndatatable(NTD_SERVICE_HighUPT, caption = \"Transit Service with the most YPT annually\" , rownames = FALSE) |&gt;\n  formatStyle(\"Total_UPT\",\n              backgroundColor = \"lightgray\", \n              fontWeight = 'bold') \n\n\n\n\n\n\n ### 2. What is the average trip length of a trip on MTA New York City Transit in miles?\nThe follow table shows the summed average trip length of a trip on MTA New York City Transit in miles. \n\n\nCode\n# Filter the dataset for the cities of interest (Brooklyn, New York, Staten Island)\n# and for the specific agency \"MTA New York City Transit\"\nmta_nyc_trip_data &lt;- NTD_SERVICE |&gt;\n  filter(Agency == \"MTA New York City Transit\")  # Filtering for MTA New York City Transit in the Agency column\n\n# Check the unique values in the Agency column to ensure it's correctly filtering\nunique(mta_nyc_trip_data$Agency)\n\n\n[1] \"MTA New York City Transit\"\n\n\nCode\n# Calculate the average trip length ( 'MILES' is the trip length column)\naverage_trip_length &lt;- mta_nyc_trip_data |&gt;\n  group_by(Agency) |&gt;\n  summarize(average_trip_length = mean(MILES, na.rm = TRUE))\n\n# Print the average trip length\n#print(average_trip_length)\n# Create a formatted datatable for the result\ndatatable(average_trip_length, caption = \"The average trip length of a trip on MTA New York City Transit in miles\", \n          rownames = FALSE, \n          options = list(pageLength = 5, dom = 't')) |&gt;\n  formatRound(columns = \"average_trip_length\", digits = 0) |&gt;\n  formatStyle(\"average_trip_length\", \n              backgroundColor = styleInterval(0, c(\"lightgreen\", \"lightblue\")),\n              fontWeight = 'bold', \n              color = \"black\")\n\n\n\n\n\n\n ### 3. Which transit service in NYC has the longest average trip length?\nThe following table shows the transit services with the longest summed average trip length in NYC. \n\n\nCode\n#Which transit service in NYC has the longest average trip length?\n\nlongest_avg_trip_length &lt;- NTD_SERVICE |&gt;\n  filter(City %in% c(\"Brooklyn\", \"New York\", \"Staten Island\")) |&gt;\n  group_by(Agency) |&gt;\n  summarize(average_trip_length = mean(MILES, na.rm = TRUE), .groups = \"drop\") |&gt;\n  arrange(desc(average_trip_length))  # Sort by the longest average trip length\n\n# Print the transit service with the longest average trip length\n#print(longest_avg_trip_length)\n\n# Create a formatted datatable for the result\ndatatable(longest_avg_trip_length, caption = \"Transit Services with Longest Average Trip Length in NYC\", \n          rownames = FALSE, \n          options = list(pageLength = 5, dom = 't')) |&gt;\n  formatRound(columns = \"average_trip_length\", digits = 0) |&gt;\n  formatStyle(\"average_trip_length\", \n              backgroundColor = styleInterval(0, c(\"lightgreen\", \"lightblue\")),\n              fontWeight = 'bold', \n              color = \"black\")\n\n\n\n\n\n\n ### 4. Which state has the fewest total miles traveled by public transit?\nNew Hampshire has the fewest total miles traveled by public transit. \n\n\nCode\n#Which state has the fewest total miles traveled by public transit?\nstate_total_miles &lt;- NTD_SERVICE |&gt;\n  group_by(State) |&gt;\n  summarize(total_miles = sum(MILES, na.rm = TRUE), .groups = \"drop\") |&gt;\n  arrange(total_miles)  # Sort in ascending order to find the state with the fewest miles\n\n# Get the state with the fewest miles\nstate_with_fewest_miles &lt;- state_total_miles[1, ]  # The first row will be the state with the fewest miles\n\n# Print the state with the fewest miles\n#print(state_with_fewest_miles)\ndatatable(state_with_fewest_miles, \n          caption = \"State with the Fewest Total Miles Traveled by Public Transit\",\n          rownames = FALSE, \n          options = list(pageLength = 5, dom = 't')) |&gt;\n  formatRound(columns = \"total_miles\", digits = 0) |&gt;\n  formatStyle(\"total_miles\", \n              backgroundColor = styleInterval(0, c(\"lightblue\", \"lightgreen\")),\n              fontWeight = 'bold', \n              color = \"black\")\n\n\n\n\n\n\n\n\n\n5. Are all states represented in this data? If no, which ones are missing?\nThe following table shows the missing states and their abbreviations in the data. \n\n\nCode\n#Are all states represented in this data? If no, which ones are missing?\n# Get the list of all U.S. state abbreviations\nall_state_abb &lt;- state.abb\n\n# Get the list of unique state abbreviations present in your dataset\nstates_in_data &lt;- unique(NTD_SERVICE$State)\n\n# Find missing state abbreviations by comparing with all_state_abb\nmissing_abb_states &lt;- setdiff(all_state_abb, states_in_data)\n\n# Combine the missing state abbreviations and their full names into one data frame\nmissing_combined &lt;- data.frame(\n  Missing_State_Abbreviation = missing_abb_states,\n  Missing_State_Full_Name = state.name[match(missing_abb_states, state.abb)]  # Mapping abbreviations to full names\n)\n\n# Display the result in a formatted datatable\ndatatable(missing_combined, \n          caption = \"Missing States in the Data (Abbreviation and Full Name)\",\n          rownames = FALSE, \n          options = list(pageLength = nrow(missing_combined), dom = 't')) |&gt;\n  formatStyle(c(\"Missing_State_Full_Name\", \"Missing_State_Abbreviation\"), \n              backgroundColor = styleInterval(0, c(\"lightblue\", \"lightcoral\")),\n              fontWeight = 'bold', \n              color = \"black\")\n\n\n\n\n\n\n ### Calculate Emissions and Normalize Emissions to Transit Usage\nThe following code calculates emissions based on the NTD Energy data and normalizes emissions to transit usage.\nThe first step was to merge the three datasets: NTD Service, NTD Energy, and EIA SEP Report. The emissions were then calculated based on the energy sources used by the transit agencies. The emissions were normalized to transit usage and categorized based on specific criteria.\n\n\nCode\n#Task 5: Calculate Emissions\n\n#Joining the three datasets\n# Step 1: Left join NTD_SERVICE and NTD_ENERGY by NTD ID\nmerged_data &lt;- left_join(NTD_SERVICE, NTD_ENERGY, by = \"NTD ID\")\n\n# Step 2: Left join with EIA_SEP_REPORT by NTD_SERVICE's \"State\" column\nmerged_data &lt;- left_join(merged_data, EIA_SEP_REPORT, by = \"State\")\n\n# Step 4: Ensure the required columns are included\nmerged_data &lt;- merged_data |&gt;\n  select(Agency, Mode, `NTD ID`, City, State, UPT, MILES, \n         `Bio-Diesel`, `Bunker Fuel`, `C Natural Gas`, `Diesel Fuel`, \n         `Electric Battery`, `Electric Propulsion`, `Ethanol`, \n         `Methonal`, `Gasoline`, `Hydrogen`, `Kerosene`, \n         `Liquified Nat Gas`, `Liquified Petroleum Gas`, \n         `Pounds of CO2 Emitted per MWh of Electricity Produced`)\n\n# Step 5: View the data\n#View(merged_data)\n\n\n ### How we calculated Total Emissions This is found in the hidden code cell below. \n\n\nCode\n#Calculate Total Emissions\ntotal_emissions_data &lt;- merged_data |&gt;\n  mutate(\n    total_emissions = (\n      `Bio-Diesel` *22.45 + \n        `Bunker Fuel` * 24.78 + \n        `C Natural Gas` * 18.32 + \n        `Diesel Fuel` * 22.45 + \n        `Electric Battery` * 0 + \n        `Electric Propulsion` * 0 + \n        `Ethanol` * 19.94 + \n        `Methonal` * 19.94  + \n        `Gasoline` * 20.86 +\n        `Hydrogen` *  0 + \n        `Kerosene` * 21.78 + \n        `Liquified Nat Gas` * 120.85 + \n        `Liquified Petroleum Gas` * 33.04\n    )\n  )\n\n#View(total_emissions_data)\n\n\n ### Normalize Emissions to Transit Usage (UPT and Passenger Mile)\nThe following data tables provide insights into the normalization of emissions to transit usage based on Unlinked Passenger Trips (UPT) and Passenger Miles. The tables categorize emissions based on specific criteria.\n ### Emissions per UPT Calculation \n\n\nCode\n# Task 6: Normalize Emissions to Transit Usage\n# Compute the emission per UPT\nemission_per_UPT &lt;- total_emissions_data |&gt;\n  mutate(per_UPT = total_emissions / UPT)\n\n# Now, calculate the categorization of per_UPT\nsum_UPT &lt;- emission_per_UPT |&gt;\n  mutate(\n    calc_cat_UPT = case_when(\n      is.na(per_UPT) ~ \"Unknown\",  # Handle NA values first\n      per_UPT &lt; 2 ~ \"Small\",       # Values less than 2\n      per_UPT &gt;= 2 & per_UPT &lt;= 4 ~ \"Medium\",  # Values between 2 and 4\n      per_UPT &gt; 4 ~ \"Large\",       # Values greater than 4\n      TRUE ~ \"Unknown\"             # Fallback if none of the conditions are met\n    )\n  )\n\n# View the result\n#View(sum_UPT)\n#Display results in a datatable\n## Create the datatable\ndatatable(sum_UPT, \n          caption = \"Categorization of Emissions per UPT\", \n          rownames = FALSE, \n          options = list(pageLength = 10)) |&gt;\n  formatStyle(\"calc_cat_UPT\", \n              backgroundColor = styleEqual(c(\"Small\", \"Medium\", \"Large\", \"Unknown\"), \n                                           c(\"lightgreen\", \"lightyellow\", \"lightblue\", \"lightgray\")),\n              fontWeight = 'bold', \n              color = \"black\")\n\n\n\n\n\n\n ### Emissions per Passenger Mile Calculation \n\n\nCode\n# Task: Compute the emission per passenger mile\nemission_per_passmile &lt;- total_emissions_data |&gt;\n  mutate(per_pass_mile = total_emissions / MILES)\n\n# Now, calculate the emission per passenger mile\nsum_passmile &lt;- emission_per_passmile |&gt;\n  mutate(\n    calc_cat_passmile = case_when(\n      is.na(per_pass_mile) ~ \"Unknown\",  # Handle NA values first\n      per_pass_mile &lt; 0.1 ~ \"Small\",     # Emissions less than 0.1\n      per_pass_mile &gt;= 0.1 & per_pass_mile &lt;= 0.3 ~ \"Medium\",  # Emissions between 0.1 and 0.3\n      per_pass_mile &gt; 0.3 ~ \"Large\",     # Emissions greater than 0.3\n      TRUE ~ \"Unknown\"                   # Fallback if none of the conditions are met\n    )\n  )\n\n# View the result\n#View(sum_passmile)\n\n# Create the datatable for the 'sum_passmile' dataset\ndatatable(sum_passmile, \n          caption = \"Emissions per Passenger Mile by Agency\", \n          rownames = FALSE, \n          options = list(pageLength = 10, dom = 't')) |&gt;\n  formatStyle(\"calc_cat_passmile\", \n              backgroundColor = styleEqual(c(\"Small\", \"Medium\", \"Large\", \"Unknown\"), \n                                           c(\"lightgreen\", \"lightyellow\", \"lightblue\", \"lightgray\")),\n              fontWeight = 'bold', \n              color = \"black\") |&gt;\n  formatRound(columns = c(\"per_pass_mile\"),\n              digits = 3)  # Format the emission per passenger mile column to 3 decimal places\n\n\n\n\n\n\n ### Agency-Level Emissions Analysis\nTo create this analysis, the total emissions, emissions per UPT, and emissions per passenger mile were computed at the agency level. The emissions were then categorized based on specific criteria. The analysis identified the greenest transit agency based on the lowest emissions per UPT.\nThe range for the categorization of emissions per UPT and emissions per passenger mile was as follows:  - Small: Less than 2  - Medium: Between 2 and 4  - Large: Greater than 4\n\n\nCode\n# Compute Total Emissions, Emissions per UPT, and Emissions per Passenger Mile at the Agency Level\nagency_emissions &lt;- total_emissions_data |&gt;\n  group_by(Agency) |&gt;\n  summarize(\n    # Sum total emissions across modes for each Agency\n    total_agency_emissions = sum(total_emissions, na.rm = TRUE),\n    \n    # Sum UPT and MILES for each Agency (needed for normalization)\n    total_UPT = sum(UPT, na.rm = TRUE),\n    total_miles = sum(MILES, na.rm = TRUE),\n    \n    # Calculate Emission per UPT for each Agency\n    emission_per_UPT = total_agency_emissions / total_UPT,\n    \n    # Calculate Emission per Passenger Mile for each Agency\n    emission_per_passmile = total_agency_emissions / total_miles\n  ) |&gt;\n  mutate(\n    # Categorize Emission per UPT (optional)\n    calc_cat_UPT = case_when(\n      is.na(emission_per_UPT) ~ \"Unknown\",\n      emission_per_UPT &lt; 2 ~ \"Small\",\n      emission_per_UPT &gt;= 2 & emission_per_UPT &lt;= 4 ~ \"Medium\",\n      emission_per_UPT &gt; 4 ~ \"Large\",\n      TRUE ~ \"Unknown\"\n    ),\n    \n    # Categorize Emission per Passenger Mile (optional)\n    calc_cat_passmile = case_when(\n      is.na(emission_per_passmile) ~ \"Unknown\",\n      emission_per_passmile &lt; 0.1 ~ \"Small\",\n      emission_per_passmile &gt;= 0.1 & emission_per_passmile &lt;= 0.3 ~ \"Medium\",\n      emission_per_passmile &gt; 0.3 ~ \"Large\",\n      TRUE ~ \"Unknown\"\n    )\n  )\n\n# View the resulting summarized and categorized emissions data for each Agency\n#View(agency_emissions)\n\n# Create the datatable for the 'agency_emissions' dataset\ndatatable(agency_emissions, \n          caption = \"Agency-Level Emissions Data\", \n          rownames = FALSE, \n          options = list(pageLength = 10, dom = 't')) |&gt;\n  formatStyle(\"calc_cat_UPT\", \n              backgroundColor = styleEqual(c(\"Small\", \"Medium\", \"Large\", \"Unknown\"), \n                                           c(\"lightgreen\", \"lightyellow\", \"lightblue\", \"lightgray\")),\n              fontWeight = 'bold', \n              color = \"black\") |&gt;\n  formatStyle(\"calc_cat_passmile\", \n              backgroundColor = styleEqual(c(\"Small\", \"Medium\", \"Large\", \"Unknown\"), \n                                           c(\"lightgreen\", \"lightyellow\", \"lightblue\", \"lightgray\")),\n              fontWeight = 'bold', \n              color = \"black\") |&gt;\n  formatRound(columns = c(\"total_agency_emissions\", \"emission_per_UPT\", \"emission_per_passmile\"),\n              digits = 2)  # Format the emissions columns to 2 decimal places\n\n\n\n\n\n\n ### Greenest Transit Agencies Analysis\nThe following code identifies the greenest transit agency based on the lowest emissions per UPT. The analysis determines the agency with the lowest emissions per UPT and displays the result in an interactive table.\nFrom the data table, we concluded that City of Portland - Portland Streetcar is the greenest transit agency with the lowest emissions per UPT.\n\n\nCode\n#Greenest Transit Agencies\n## Determine the Greenest Transit Agency (the agency with the lowest emissions per UPT)\ngreenest_agency &lt;- agency_emissions |&gt;\n  arrange(emission_per_UPT) |&gt;\n  slice(1) # Agency with the lowest emissions per UPT\n\n# Display the result\n#View(greenest_agency)\n\n# Display as an interactive table\ndatatable(greenest_agency, \n          caption = \"Greenest Transit Agency or Lowest Emissions per UPT\", \n          rownames = FALSE, \n          options = list(pageLength = 5)) |&gt;\n  formatStyle(\"emission_per_UPT\", \n              backgroundColor = styleInterval(0, c(\"lightgreen\", \"lightblue\")),\n              fontWeight = 'bold', \n              color = \"black\")\n\n\n\n\n\n\n ### Highest Electrification per Agency\nThe following code computes the percentage of electrification for each agency based on the energy sources used. The analysis identifies the agency with the highest percentage of electrification and displays the result in an interactive table.\nFrom the data table, we concluded that the City of Portland - Portland Streetcar has the highest percentage of electrification.\n\n\nCode\n# Compute the percentage of electrification for each agency\nagency_electrification &lt;- total_emissions_data |&gt;\n  mutate(\n    # Calculate total energy consumed\n    total_energy_consumed = rowSums(across(c(`Bio-Diesel`, `Bunker Fuel`, `C Natural Gas`, \n                                           `Diesel Fuel`, `Electric Battery`, `Electric Propulsion`, \n                                           `Ethanol`, `Methonal`, `Gasoline`, `Hydrogen`, \n                                           `Kerosene`, `Liquified Nat Gas`, `Liquified Petroleum Gas`)), \n                                    na.rm = TRUE),\n    \n    # Calculate percentage of energy from electric sources\n    electrification_percentage = (`Electric Battery` + `Electric Propulsion`) / total_energy_consumed * 100\n  ) |&gt;\n  group_by(Agency) |&gt;\n  summarize(\n    electrification_percentage = mean(electrification_percentage, na.rm = TRUE)\n  ) |&gt;\n  arrange(desc(electrification_percentage))\n\n# Agency with the highest percentage of electrification\nagency_with_highest_electrification &lt;- agency_electrification |&gt;\n  arrange(desc(electrification_percentage)) |&gt;\n  slice(1)\n\n# Display as an interactive table\ndatatable(agency_with_highest_electrification, \n          caption = \"Highest Percentage of Electrification\", \n          rownames = FALSE, \n          options = list(pageLength = 5)) |&gt;\n  formatStyle(\"electrification_percentage\", \n              backgroundColor = styleInterval(0, c(\"lightgreen\", \"lightblue\")),\n              fontWeight = 'bold', \n              color = \"black\")\n\n\n\n\n\n\nCode\n# Display the result\n#View(agency_with_highest_electrification)\n\n\n ### Agency with the Highest Total Emissions or the ‘Worst’ Agency\nThe following code identifies the agency with the highest total emissions. The analysis determines the agency with the highest total emissions and displays the result in an interactive table.\nFrom the data table, we concluded that the New Jersy Tranist Corp is the agency with the highest total emissions despite being considered a small agency.\n\n\nCode\n# Determine the agency with the highest total emissions\nworst_agency &lt;- agency_emissions |&gt;\n  arrange(desc(total_agency_emissions)) |&gt;\n  slice(1)\n\n# Display the result\n#View(worst_agency)\n\n# Worst Agency (highest total emissions)\nworst_agency &lt;- agency_emissions |&gt;\n  arrange(desc(total_agency_emissions)) |&gt;\n  slice(1)\n\n# Display as an interactive table\ndatatable(worst_agency, \n          caption = \"Worst Agency (Highest Total Emissions)\", \n          rownames = FALSE, \n          options = list(pageLength = 5)) |&gt;\n  formatStyle(\"total_agency_emissions\", \n              backgroundColor = styleInterval(0, c(\"lightcoral\", \"lightyellow\")),\n              fontWeight = 'bold', \n              color = \"black\")\n\n\n\n\n\n\n ### Transit Agency Categorization by Size\nThe following code categorizes transit agencies based on their total UPT size. The agencies are classified as small, medium, or large based on specific criteria. The analysis provides insights into the distribution of agencies by size category and displays the results in an interactive table.\n\n\nCode\n#Categorize Smaller agencies: Best Small Agency\n## Categorizing agencies based on total UPT size\nagency_size_category &lt;- agency_emissions |&gt;\n  mutate(\n    size_category = case_when(\n      total_UPT &lt; 500000 ~ \"Small\",\n      total_UPT &gt;= 500000 & total_UPT &lt; 20000000 ~ \"Medium\",\n      total_UPT &gt;= 20000000 ~ \"Large\",\n      TRUE ~ \"Unknown\"\n    )\n  )\n\n# Display categorized agencies in an interactive table\ndatatable(agency_size_category, \n          caption = \"Transit Agencies Categorized by Size (Total UPT)\", \n          rownames = FALSE, \n          options = list(pageLength = 10)) |&gt;\n  formatStyle(\"size_category\", \n              backgroundColor = styleEqual(c(\"Small\", \"Medium\", \"Large\"), \n                                           c(\"lightgreen\", \"lightyellow\", \"lightblue\")),\n              fontWeight = 'bold', \n              color = \"black\")\n\n\n\n\n\n\n ### Data Visualization for Transit Agencies by Size Category\nThe ggplot2 library was used to create a bar chart to visualize the distribution of transit agencies by size category. The agencies were categorized based on their total UPT size into small, medium, and large categories. The bar chart provides a visual representation of the distribution of agencies by size category.\nFrom the chart we can see that most agencies fall into the “Large” category, followed by the “Medium” category, and a few agencies in the “Small” category.Despite this the small agencies are equally the best and worst when it comes to sustainablity practices. \n\n\nCode\n#Data Visualization \nlibrary(ggplot2)\n\n# Create a bar chart to visualize the distribution of agencies by size category\nggplot(agency_size_category, aes(x = size_category, fill = size_category)) +\n  geom_bar() + # Create bars for each size category\n  labs(\n    title = \"Distribution of Transit Agencies by Size (Total UPT)\",\n    x = \"Size Category\",\n    y = \"Number of Agencies\"\n  ) +\n  scale_fill_manual(values = c(\"lightgreen\", \"lightyellow\", \"lightblue\")) + # Colors for each category\n  theme_minimal() +\n  theme(\n    plot.title = element_text(hjust = 0.5, size = 14, face = \"bold\"),\n    axis.text.x = element_text(angle = 45, hjust = 1) # Rotate x-axis labels for readability\n  )\n\n\n\n\n\n\n\n\n\n ### Best Small Agency Analysis\nThe following code identifies the best small agency based on the lowest emissions per UPT within the small agency category. The analysis determines the agency with the lowest emissions per UPT in the small category and displays the result in an interactive table.\nThe best small agency is the “City of Fort Lauderdale” with the lowest emissions per UPT in the small category.\n\n\nCode\n## Display Best Small Agency (the winner within the \"Small\" category)\nbest_small_agency &lt;- agency_size_category |&gt;\n  filter(size_category == \"Small\") |&gt;\n  arrange(emission_per_UPT) |&gt;\n  slice(1)\n\n# Display as an interactive table\ndatatable(best_small_agency, \n          caption = \"Best Small Agency (Lowest Emissions per UPT in Small Agencies)\", \n          rownames = FALSE, \n          options = list(pageLength = 5)) |&gt;\n  formatStyle(\"emission_per_UPT\", \n              backgroundColor = styleInterval(0, c(\"lightgreen\", \"lightblue\")),\n              fontWeight = 'bold', \n              color = \"black\")\n\n\n\n\n\n\n ### Best Medium Agency The following code identifies the best medium agency based on the lowest emissions per UPT within the medium agency category. The analysis determines the agency with the lowest emissions per UPT in the medium category and displays the result in an interactive table.\nThe best medium agency is the “City of Portland” with the lowest emissions per UPT in the medium category.\n\n\nCode\n## Display Best Medium Agency (the winner within the \"Medium\" category)\nbest_med_agency &lt;- agency_size_category |&gt;\n  filter(size_category == \"Medium\") |&gt;\n  arrange(emission_per_UPT) |&gt;\n  slice(1)\n\n# Display as an interactive table\ndatatable(best_med_agency, \n          caption = \"Best Medium Agency (Lowest Emissions per UPT in Medium Agencies)\", \n          rownames = FALSE, \n          options = list(pageLength = 5)) |&gt;\n  formatStyle(\"emission_per_UPT\", \n              backgroundColor = styleInterval(0, c(\"purple\", \"navy\")),\n              fontWeight = 'bold', \n              color = \"white\")\n\n\n\n\n\n\n ### Best Large Agency The following code identifies the best large agency based on the lowest emissions per UPT within the large agency category. The analysis determines the agency with the lowest emissions per UPT in the large category and displays the result in an interactive table.\nThe best large agency is the “Port Authority Trans Hudson Corporation” with the lowest emissions per UPT in the large category.\n\n\nCode\n## Display Best Large Agency (the winner within the \"Large\" category)\nbest_large_agency &lt;- agency_size_category |&gt;\n  filter(size_category == \"Large\") |&gt;\n  arrange(emission_per_UPT) |&gt;\n  slice(1)\n\n# Display as an interactive table\ndatatable(best_large_agency, \n          caption = \"Best Large Agency (Lowest Emissions per UPT in Large Agencies)\", \n          rownames = FALSE, \n          options = list(pageLength = 5)) |&gt;\n  formatStyle(\"emission_per_UPT\", \n              backgroundColor = styleInterval(0, c(\"red\", \"orange\")),\n              fontWeight = 'bold', \n              color = \"white\")\n\n\n\n\n\n\n ### Conclusion Based on the analysis of the National Transit Database (NTD) Energy and Service data, the winners of the GTA IV Green Transit Awards have been identified. The awards recognize the transit agencies with the lowest emissions per unlinked passenger trip (UPT) and the highest electrification percentage. The analysis also categorizes transit agencies by size and identifies the best small, medium, and large agencies based on emissions per UPT. The results provide valuable insights into the environmental performance of transit agencies and highlight the efforts of the greenest and most sustainable transit providers in the United States.\n\n\nRelevant Sources and References\n\nEnergy Information Administration (EIA) - EIA Website\nNational Transit Database (NTD) - NTD Website\nU.S. Department of Transportation - DOT Website\n\n\nLast Updated: Wednesday 03 26, 2025 at 00:48AM"
  }
]